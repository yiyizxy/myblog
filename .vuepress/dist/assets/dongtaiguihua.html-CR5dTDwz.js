import{_ as t,o,c as e,e as i}from"./app-BcWTENpX.js";const a={},p=i('<h2 id="处理思路" tabindex="-1"><a class="header-anchor" href="#处理思路"><span>处理思路</span></a></h2><p>步骤一：定义dp数组的含义 步骤二：定义状态转移方程 步骤三：初始化状态转移的初始值 步骤四：可优化点(可选)</p><h2 id="常见题目" tabindex="-1"><a class="header-anchor" href="#常见题目"><span>常见题目</span></a></h2><ul><li>198.打家劫舍</li><li>213.打家劫舍 II</li><li>337.打家劫舍 III ？？？？</li><li>62.不同路径</li><li>63.不同路径II</li><li>322.零钱兑换</li></ul><p>1.二叉树先序遍历 给一个二叉树的先序遍历和中序遍历，然后给出后序遍历。递进一步：前序、中序、后序三种遍历，任意给出两能求出第三个嘛</p><p>2.汉诺塔问题 解法：http://www.runoob.com/java/method-tower.html</p><p>代码块 Plain Text ​ public class MainClass { public static void main(String[] args) { int nDisks = 3; doTowers(nDisks, &#39;A&#39;, &#39;B&#39;, &#39;C&#39;); } public static void doTowers(int topN, char from, char inter, char to) { if (topN == 1){ System.out.println(&quot;Disk 1 from &quot; + from + &quot; to &quot; + to); }else { doTowers(topN - 1, from, to, inter); System.out.println(&quot;Disk &quot; + topN + &quot; from &quot; + from + &quot; to &quot; + to); doTowers(topN - 1, inter, from, to); } } } ​ 3.求二叉树中第k层节点的个数</p><p>4.求二叉树中任意两个节点的第一个公共父节点</p><p>5.随意给定一个字符串，将其转换成数字 考察思维完整性，代码需要判断有没有 字母、正符号、小数点，数字过大当前类型存放不了。 当面试者问你是否有字母、负号等的时候，只需声明题目就这一句话，让起自由发挥。考察应聘者是否只想简单化问题，怕麻烦。</p><p>6.给一组数，只有两个数只出现了一次，其他所有数都是成对出现的。怎么找出这两个数。编写函数实现。 对于一组数中只有一个数只出现一次，其他所有数都是成对出现的，我们采用了对全部数组元素进行异或，但是对于找出两个出现一次的数应该怎么解决呢？先对所有的元素进行异或，则结果为两个出现一次的数的异或结果，然后将结果转换为二进制，找出二进制数中的第一个1，然后根据这个1的判断条件进行分组，分为两组，分别对两个组的元素进行全部异或，则就找出两个不同的数。</p><p>题目分析：</p><p>上次介绍了，对于一组数中只有一个数只出现一次，其他所有数都是成对出现的，我们采用了对全部数组元素进行异或，但是对于找出两个出现一次的数应该怎么解决呢？先对所有的元素进行异或，则结果为两个出现一次的数的异或结果，然后将结果转换为二进制，找出二进制数中的第一个1，然后根据这个1的判断条件进行分组，分为两组，分别对两个组的元素进行全部异或，则就找出两个不同的数。</p><p>7.使用两个栈实现一个队列，能用两个队列实现一个栈吗？</p><ol start="8"><li>求数字集合所有子集 （递归和循环时间复杂度分析）</li></ol><p>9.判断出栈序列，输入两个整数序列。其中一个序列表示栈的push顺序，判断另一个序列有没有可能是对应的pop顺序。</p><p>10.给定一个数字数组d和数字a，其中数组d中数字顺序先下降后递增，找到数字a在数组d中的下标（如果没有则返回-1）。 主要考查是否掌握基本的二分查找方法，逻辑思维能力，以及运用现有知识解决新问题的能力。</p><p>11.寻找数组中相加为0的组合，给定一个int数组[1,-1,0,2,-1,4]，要求找出数组中，所有的三元组，符合相加为0的特性。比如[-1,-1,2]和[1,-1,0]</p><p>12.翻扑克牌</p><p>手上有A~K13张的扑克牌, 先把上面一张的置于底下，然后翻开一张牌, 最后翻出来的牌A,2,3,4,5,6,7,8,9,10,J,Q,K的顺序</p><p>那我手上牌顺序是怎样, 答案:7.A.Q.2.8.3.J.4.9.5.K.6.10</p><p>分析: 考察学生逆推的逻辑能力, 如果加强难度, 不准用笔, 考察空间思考能力</p>',21),l=[p];function s(n,r){return o(),e("div",null,l)}const d=t(a,[["render",s],["__file","dongtaiguihua.html.vue"]]),u=JSON.parse('{"path":"/blogs/technology/Leetcode/dongtaiguihua.html","title":"动态规划","lang":"en-US","frontmatter":{"title":"动态规划","date":"2024/07/22","tags":["javascript"],"categories":["javascript"]},"headers":[{"level":2,"title":"处理思路","slug":"处理思路","link":"#处理思路","children":[]},{"level":2,"title":"常见题目","slug":"常见题目","link":"#常见题目","children":[]}],"git":{"createdTime":1721741666000,"updatedTime":1722346234000,"contributors":[{"name":"zhuxiaoying","email":"zhuxiaoying@meituan.com","commits":4}]},"filePathRelative":"blogs/technology/Leetcode/动态规划.md"}');export{d as comp,u as data};

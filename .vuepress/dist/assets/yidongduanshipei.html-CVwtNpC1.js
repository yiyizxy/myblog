import{_ as n,o as s,c as a,e as t}from"./app-COjMlnxi.js";const p="/myblog/assets/inch-DtCnZ2gf.png",e="/myblog/assets/iphone-CFm6Wit0.png",o="/myblog/assets/pixels-ByGZtxB2.png",c={},l=t('<h2 id="基础概念" tabindex="-1"><a class="header-anchor" href="#基础概念"><span>基础概念</span></a></h2><h3 id="屏幕尺寸" tabindex="-1"><a class="header-anchor" href="#屏幕尺寸"><span>屏幕尺寸</span></a></h3><p>屏幕尺寸指的是手机屏幕对角线的长度，知道了屏幕的宽度（width）和高度（height），对角线就可以通过勾股定理算出： <img src="'+p+'" alt="勾股定理" title="勾股定理"> 然后再把这个长度换算成 “英寸（inch）”，就是我们平时所说的手机尺寸。1英寸等于 25.4mm。 比如iPhone常见的尺寸有3.5寸、4寸、4.7寸、5.5寸等等。 <img src="'+e+'" alt="iPhone常见的尺寸" title="iPhone常见的尺寸"></p><h3 id="设备物理像素-设备像素-device-pixels-简称dp" tabindex="-1"><a class="header-anchor" href="#设备物理像素-设备像素-device-pixels-简称dp"><span>设备物理像素（设备像素,device pixels，简称dp）</span></a></h3><p>我们在手机屏幕上看到的画面，本质上都是由一个个发光的物理像素组成，物理像素是构成屏幕图像的最小单元。我们常说的屏幕分辨率，就是指这个屏幕上拥有多少个物理像素。</p><p>比如：iPhone6的分辨率是1334 × 750，即屏幕在水平方向上有750个像素，在垂直方向上有1334个像素。 <img src="'+o+`" alt="屏幕分辨率" title="屏幕分辨率"> 通常，设计师给的 UI 设计稿上的PX指的就是物理像素。</p><h3 id="逻辑像素-device-independent-pixels-dip" tabindex="-1"><a class="header-anchor" href="#逻辑像素-device-independent-pixels-dip"><span>逻辑像素(device independent pixels, dip)</span></a></h3><p>也叫设备独立像素，是前端开发中的一个概念，css像素是一个抽象概念，与设备无关，主要在浏览器中使用，可以确保在不同设备下元素的尺寸是相通的</p><h3 id="设备像素比-dpr" tabindex="-1"><a class="header-anchor" href="#设备像素比-dpr"><span>设备像素比（DPR）</span></a></h3><p>dpr = 物理像素/逻辑像素 dpr=1：物理像素和逻辑像素1:1，此时一个物理像素点显示一个逻辑像素点 dpr=2: 物理像素是逻辑像素的2倍，此时4个物理像素点显示一个逻辑像素点</p><h2 id="为什么设计稿都是750" tabindex="-1"><a class="header-anchor" href="#为什么设计稿都是750"><span>为什么设计稿都是750</span></a></h2><ol><li>高分辨率屏幕的普及：现代移动设备通常具有高分辨率的屏幕。以iPhone为例，iPhone6、7、8 等设备的屏幕宽度为375像素，但由于 Retina 显示技术，其实际物理像素为750像素（即 2 倍分辨率）。这意味着在设计稿中使用750px宽度，可以更好地适应这些高分辨率设备。</li><li>开发便利性：750px宽度的设计稿在开发过程中计算相对简单。例如，如果设计稿宽度为 50px，那么在开发时只需将设计稿中的尺寸除以2就可以得到实际的CSS像素值。这种简单的计算方式可以减少开发过程中的出错概率</li><li>设计规范的统一：750px设计稿有助于在设计和开发团队之间建立一致的规范。设计师可以按照统一的标准进行设计，而开发人员也可以按照相同的标准进行开发，从而提高工作效率和减少沟通成本。</li></ol><h2 id="移动端适配方案" tabindex="-1"><a class="header-anchor" href="#移动端适配方案"><span>移动端适配方案</span></a></h2><h3 id="百分比适配" tabindex="-1"><a class="header-anchor" href="#百分比适配"><span>百分比适配</span></a></h3><pre><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><pre><code class="language-css"> <span class="token selector">.container</span> <span class="token punctuation">{</span>
   display<span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
   width<span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
   height<span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token selector">​
 .container div</span> <span class="token punctuation">{</span>
   width<span class="token punctuation">:</span> 25%<span class="token punctuation">;</span>
   height<span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token selector">​
 .container div:nth-child(1)</span> <span class="token punctuation">{</span>
   background-color<span class="token punctuation">:</span> red<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token selector">.container div:nth-child(2)</span> <span class="token punctuation">{</span>
   background-color<span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token selector">.container div:nth-child(3)</span> <span class="token punctuation">{</span>
   background-color<span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token selector">.container div:nth-child(4)</span> <span class="token punctuation">{</span>
   background-color<span class="token punctuation">:</span> green<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><h3 id="viewpoint适配" tabindex="-1"><a class="header-anchor" href="#viewpoint适配"><span>viewpoint适配</span></a></h3><pre><code class="language-js"> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">const</span> view <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;meta[name=&quot;viewport&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">const</span> targetWidth <span class="token operator">=</span> <span class="token number">375</span><span class="token punctuation">;</span>
   <span class="token comment">// 获取设备宽度</span>
   <span class="token keyword">const</span> curWidth <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth<span class="token punctuation">;</span>
   <span class="token keyword">const</span> targetScale <span class="token operator">=</span> curWidth <span class="token operator">/</span> targetWidth<span class="token punctuation">;</span>
   view<span class="token punctuation">.</span>content <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">initial-scale=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>targetScale<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,user-scalable=no,minimum-scale=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>targetScale<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,maximum-scale=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>targetScale<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><p>缺点： 在设置宽度时，要把宽度设置成一个固定值，那么所有手机看上去都是同样的大小，没有分别，不太好。厂商特意做出各种大小的手机，还要弄成一样，那买大屏机有什么意义。 算出的值在一些有小数的情况下可能会出现误差(可忽略)，因为设备独立像素不能有小数。 对设计稿的测量存在问题。</p><h3 id="vw-vh适配" tabindex="-1"><a class="header-anchor" href="#vw-vh适配"><span>vw/vh适配</span></a></h3><p>vw 相当于直接将屏幕分为了100列，1vw 就是1列，那么按照 iPhone 6/7/8 设备宽度为 375px，因此 1vw 就是 3.75px，假设跟元素的字体大小为50px，那么50 / 3.75 = 13.33333vw</p><h3 id="rem适配" tabindex="-1"><a class="header-anchor" href="#rem适配"><span>rem适配</span></a></h3><p>rem适配的原理就是把设备宽度都分成相同的若干份，然后再计算元素宽度所占的份数。 假设750px下需要等分成10份，那么1rem=75px(设备可视宽/份数)，那我们需要考虑下实际页面渲染出来的fontSize是多少</p><pre><code class="language-js"><span class="token number">750</span><span class="token operator">/</span>cilentwidth <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">/</span> fontSize
1rem <span class="token operator">=</span> 10px
<span class="token keyword">const</span> clientWidth
<span class="token keyword">const</span> html <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement
<span class="token keyword">const</span> clientWidth <span class="token operator">=</span> html<span class="token punctuation">.</span>clientWidth
html<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">*</span> clientWidth <span class="token operator">/</span> <span class="token number">750</span>
</code></pre><h2 id="_0-5px问题" tabindex="-1"><a class="header-anchor" href="#_0-5px问题"><span>0.5px问题</span></a></h2><p>1px问题指的是：在一些 Retina屏幕的机型上，移动端页面的1px会变得很粗，呈现出不止1px的效果。原因很简单CSS中的1px并不能和移动设备上的1px划等号。</p><p>为什么无法展示0.5px? 0.5px是逻辑像素，在dpr=1的情况下，需要展示0.5px的物理像素，显示器不支持</p><p>解决方案 1.采用transform: scale()的方式，该方法用来定义元素的2D缩放转换：</p><pre><code class="language-css"><span class="token selector">// 下边框
div</span> <span class="token punctuation">{</span>
    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">div::after</span> <span class="token punctuation">{</span>
    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
    <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
    <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid #000<span class="token punctuation">;</span>
    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><p>2.采用meta viewport的方式</p><pre><code class="language-css">&lt;meta name=<span class="token string">&quot;viewport&quot;</span> content=<span class="token string">&quot;width=device-width, initial-scale=0.5, minimum-scale=0.5, maximum-scale=0.5&quot;</span>/&gt;
</code></pre>`,31),i=[l];function u(r,k){return s(),a("div",null,i)}const h=n(c,[["render",u],["__file","yidongduanshipei.html.vue"]]),g=JSON.parse('{"path":"/blogs/technology/CSS/yidongduanshipei.html","title":"移动端适配","lang":"en-US","frontmatter":{"title":"移动端适配","date":"2024/07/01","tags":["CSS"],"categories":["CSS"]},"headers":[{"level":2,"title":"基础概念","slug":"基础概念","link":"#基础概念","children":[{"level":3,"title":"屏幕尺寸","slug":"屏幕尺寸","link":"#屏幕尺寸","children":[]},{"level":3,"title":"设备物理像素（设备像素,device pixels，简称dp）","slug":"设备物理像素-设备像素-device-pixels-简称dp","link":"#设备物理像素-设备像素-device-pixels-简称dp","children":[]},{"level":3,"title":"逻辑像素(device independent pixels, dip)","slug":"逻辑像素-device-independent-pixels-dip","link":"#逻辑像素-device-independent-pixels-dip","children":[]},{"level":3,"title":"设备像素比（DPR）","slug":"设备像素比-dpr","link":"#设备像素比-dpr","children":[]}]},{"level":2,"title":"为什么设计稿都是750","slug":"为什么设计稿都是750","link":"#为什么设计稿都是750","children":[]},{"level":2,"title":"移动端适配方案","slug":"移动端适配方案","link":"#移动端适配方案","children":[{"level":3,"title":"百分比适配","slug":"百分比适配","link":"#百分比适配","children":[]},{"level":3,"title":"viewpoint适配","slug":"viewpoint适配","link":"#viewpoint适配","children":[]},{"level":3,"title":"vw/vh适配","slug":"vw-vh适配","link":"#vw-vh适配","children":[]},{"level":3,"title":"rem适配","slug":"rem适配","link":"#rem适配","children":[]}]},{"level":2,"title":"0.5px问题","slug":"_0-5px问题","link":"#_0-5px问题","children":[]}],"git":{"createdTime":1719836602000,"updatedTime":1722430141000,"contributors":[{"name":"zhuxiaoying","email":"zhuxiaoying@meituan.com","commits":2}]},"filePathRelative":"blogs/technology/CSS/移动端适配.md"}');export{h as comp,g as data};

import{_ as n,o as s,c as a,e as t}from"./app-COjMlnxi.js";const p={},e=t(`<h2 id="快速排序" tabindex="-1"><a class="header-anchor" href="#快速排序"><span>快速排序</span></a></h2><p>思路：快速排序是先将一个元素排好序，然后再将剩下的元素排好序</p><pre><code class="language-js"><span class="token keyword">function</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">nums</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">lo</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">hi</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>lo <span class="token operator">&gt;=</span> hi<span class="token punctuation">)</span> <span class="token keyword">return</span> 
    <span class="token comment">// 对nums[lo...hi]切分</span>
    <span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token function">partition</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> lo<span class="token punctuation">,</span> hi<span class="token punctuation">)</span>
    <span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> lo<span class="token punctuation">,</span> p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> p <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> hi<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><h2 id="常见题目" tabindex="-1"><a class="header-anchor" href="#常见题目"><span>常见题目</span></a></h2><ul><li>912.排序数组</li><li>53.最大子数组和</li><li>215.数组中的第K个最大元素</li><li>148.排序链表</li></ul>`,5),o=[e];function c(l,i){return s(),a("div",null,o)}const u=n(p,[["render",c],["__file","fenzhifa.html.vue"]]),k=JSON.parse('{"path":"/blogs/technology/Leetcode/fenzhifa.html","title":"分治法","lang":"en-US","frontmatter":{"title":"分治法","date":"2024/07/22","tags":["javascript"],"categories":["javascript"]},"headers":[{"level":2,"title":"快速排序","slug":"快速排序","link":"#快速排序","children":[]},{"level":2,"title":"常见题目","slug":"常见题目","link":"#常见题目","children":[]}],"git":{"createdTime":1721750511000,"updatedTime":1722145683000,"contributors":[{"name":"zhuxiaoying","email":"zhuxiaoying@meituan.com","commits":2}]},"filePathRelative":"blogs/technology/Leetcode/分治法.md"}');export{u as comp,k as data};

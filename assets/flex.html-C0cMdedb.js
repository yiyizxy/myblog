import{_ as s,r as a,o as e,c as p,a as n,b as l,d as o,e as c}from"./app-BcWTENpX.js";const r="/myblog/assets/flex-g4_xprx8.png",i="/myblog/assets/flex-direction-Cj8QCn-M.png",d="/myblog/assets/no-wrap-B2TVjFnj.png",u="/myblog/assets/wrap-Bd8W9zOJ.png",g="/myblog/assets/wrap-reverse-DxF5_m0c.png",h="/myblog/assets/justify-content-B-yyMs0V.png",f="/myblog/assets/align-items-D2-6SA-7.png",k="/myblog/assets/align-items-baseline-D6_UN5Wf.png",x="/myblog/assets/align-items-stretch-CpVmtXIl.png",m="/myblog/assets/align-content-flex-start-C-1v4qHH.png",b="/myblog/assets/align-content-flex-end-CsPZwzBd.png",y="/myblog/assets/align-content-center-EHN8WpN5.png",w="/myblog/assets/align-content-space-between-B-dkmac1.png",_="/myblog/assets/align-content-space-around-CHcmswQe.png",v="/myblog/assets/align-content-stretch-D3qKaUl8.png",C="/myblog/assets/align-content-stretch-height-YBmUm38J.png",S="/myblog/assets/order-CvvRSluq.png",j="/myblog/assets/flex-grow1-9JpzkjzS.png",B="/myblog/assets/flex-grow2-CW4UQ0XD.png",D="/myblog/assets/flex-shrink1-CD58C8nW.png",N="/myblog/assets/flex-shrink0-BOtPuqsa.png",z="/myblog/assets/align-self-BF88DAsv.png",F={},V=c('<h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h2><p>Flexbox（弹性盒子布局）是一种用于页面布局的 CSS3 新特性，它提供了更加灵活和高效的布局方式，特别适用于创建复杂的、响应式的布局结构。Flexbox的主要思想是让容器的子元素能够根据需要自动伸缩，并且能够控制子元素在容器内的对齐、排列方式。 <img src="'+r+'" alt="flex" title="flex"></p><p>容器默认存在两根轴: 水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end；交叉轴的开始位置叫做cross start，结束位置叫做cross end。</p><h2 id="容器属性" tabindex="-1"><a class="header-anchor" href="#容器属性"><span>容器属性</span></a></h2><h3 id="flex-direction" tabindex="-1"><a class="header-anchor" href="#flex-direction"><span>flex-direction</span></a></h3><table><thead><tr><th>属性值</th><th>含义</th></tr></thead><tbody><tr><td>row</td><td>默认值，主轴为水平方向（水平布局），起点在左端，从左向右排列</td></tr><tr><td>row-reverse</td><td>主轴为水平方向（水平布局），起点在右端，从右向左排列</td></tr><tr><td>column</td><td>主轴为垂直方向（垂直布局），起点在上沿，从上往下排列</td></tr><tr><td>column-reverse</td><td>主轴为垂直方向（垂直布局），起点在下沿，从下往上排列</td></tr></tbody></table><p><img src="'+i+'" alt="flex-direction" title="flex-direction"></p><h3 id="flex-wrap" tabindex="-1"><a class="header-anchor" href="#flex-wrap"><span>flex-wrap</span></a></h3><table><thead><tr><th>属性值</th><th>含义</th></tr></thead><tbody><tr><td>nowrap</td><td>默认值，表示不换行</td></tr><tr><td>wrap</td><td>换行</td></tr><tr><td>wrap-reverse</td><td>换行，第一行在下方</td></tr></tbody></table><h4 id="nowrap" tabindex="-1"><a class="header-anchor" href="#nowrap"><span>nowrap</span></a></h4><p>默认值，不换行。当主轴的长度是固定并且空间不足时，项目尺寸会随之进行调整，而不会换行 <img src="'+d+'" alt="no-wrap" title="no-wrap"></p><h4 id="wrap" tabindex="-1"><a class="header-anchor" href="#wrap"><span>wrap</span></a></h4><p>换行，第一行在上面 <img src="'+u+'" alt="wrap" title="wrap"></p><h4 id="wrap-reverse" tabindex="-1"><a class="header-anchor" href="#wrap-reverse"><span>wrap-reverse</span></a></h4><p>换行，第一行在下方。 <img src="'+g+'" alt="wrap-reverse" title="wrap-reverse"></p><h3 id="flex-flow" tabindex="-1"><a class="header-anchor" href="#flex-flow"><span>flex-flow</span></a></h3><p>即表示flex-direction flex-wrap，默认值为<code>row nowrap</code></p><h3 id="justify-content" tabindex="-1"><a class="header-anchor" href="#justify-content"><span>justify-content</span></a></h3><p>属性定义了项目在主轴上的对齐方式。</p><table><thead><tr><th>属性值</th><th>含义</th></tr></thead><tbody><tr><td>flex-start</td><td>默认值，左对齐</td></tr><tr><td>flex-end</td><td>右对齐</td></tr><tr><td>center</td><td>居中</td></tr><tr><td>space-between</td><td>两端对齐，项目之间的间隔都相等</td></tr><tr><td>space-around</td><td>每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍</td></tr><tr><td>space-evenly</td><td>每个项目之间的间隔相等</td></tr></tbody></table><p><img src="'+h+'" alt="justify-content" title="justify-content"></p><h3 id="align-items" tabindex="-1"><a class="header-anchor" href="#align-items"><span>align-items</span></a></h3><p>属性定义项目在交叉轴上如何对齐</p><table><thead><tr><th>属性值</th><th>含义</th></tr></thead><tbody><tr><td>flex-start</td><td>交叉轴的起点对齐</td></tr><tr><td>flex-end</td><td>交叉轴的终点对齐</td></tr><tr><td>center</td><td>交叉轴的中点对齐</td></tr><tr><td>baseline</td><td>项目的第一行文字的基线对齐</td></tr><tr><td>stretch</td><td>（默认值）如果项目未设置高度或设为auto，将占满整个容器的高度</td></tr></tbody></table><p><img src="'+f+'" alt="align-items" title="align-items"><img src="'+k+'" alt="align-items-baseline" title="align-items-baseline"><img src="'+x+'" alt="align-items-stretch" title="align-items-stretch"></p><h3 id="align-content" tabindex="-1"><a class="header-anchor" href="#align-content"><span>align-content</span></a></h3><p>属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</p><table><thead><tr><th>属性值</th><th>含义</th></tr></thead><tbody><tr><td>flex-start</td><td>交叉轴的起点对齐</td></tr><tr><td>flex-end</td><td>交叉轴的终点对齐</td></tr><tr><td>center</td><td>交叉轴的中点对齐</td></tr><tr><td>baseline</td><td>项目的第一行文字的基线对齐</td></tr><tr><td>stretch</td><td>（默认值） 如果项目未设置高度或设为auto，将占满整个容器的高度</td></tr></tbody></table><p>flex-start: 从交叉轴开始位置填充 <img src="'+m+'" alt="align-content-flex-start" title="align-content-flex-start"></p><p>flex-end: 从交叉轴结尾位置填充 <img src="'+b+'" alt="align-content-flex-end" title="align-content-flex-end"></p><p>center: 与交叉轴中点对齐 <img src="'+y+'" alt="align-content-center" title="align-content-center"></p><p>space-between: 与交叉轴两端对齐，轴线之前的间隔平均分布 <img src="'+w+'" alt="align-content-space-between" title="align-content-space-between"></p><p>space-around: 每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍 <img src="'+_+'" alt="align-content-space-around" title="align-content-space-around"></p><p>stretch默认值，轴线占满整个交叉轴。这里我们先设置每个项目都是固定宽度，效果如下： <img src="'+v+'" alt="align-content-stretch" title="align-content-stretch"> 下面就去掉每个项目的高度，它会占满整个交叉轴，效果如下: <img src="'+C+`" alt="align-content-stretch-height" title="align-content-stretch-height"></p><h2 id="项目属性" tabindex="-1"><a class="header-anchor" href="#项目属性"><span>项目属性</span></a></h2><h3 id="order" tabindex="-1"><a class="header-anchor" href="#order"><span>order</span></a></h3><p>order属性用来定义项目的排列顺序。数值越小，排列越靠前，默认为0。使用形式如下:</p><pre><code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">{</span>
    <span class="token property">order</span><span class="token punctuation">:</span> &lt;integer&gt;<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><p><img src="`+S+`" alt="order" title="order"></p><h3 id="flex-grow" tabindex="-1"><a class="header-anchor" href="#flex-grow"><span>flex-grow</span></a></h3><p>flex-grow属性定义项目的放大比例，默认为0 ，即如果存在剩余空间，也不放大。</p><pre><code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex-grow</span><span class="token punctuation">:</span> &lt;number&gt;<span class="token punctuation">;</span> <span class="token comment">/* default 0 */</span>
<span class="token punctuation">}</span>
</code></pre><p>如果所有项目的flex-grow属性都为 1，则它们将等分剩余空间（如果有的话） <img src="`+j+'" alt="flex-grow" title="flex-grow"></p><p>如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。 <img src="'+B+`" alt="flex-grow" title="flex-grow"></p><h3 id="flex-shrink" tabindex="-1"><a class="header-anchor" href="#flex-shrink"><span>flex-shrink</span></a></h3><p>flex-shrink属性定义了项目的缩小比例，默认为 1 ，即如果空间不足，该项目将缩小</p><pre><code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex-shrink</span><span class="token punctuation">:</span> &lt;number&gt;<span class="token punctuation">;</span> <span class="token comment">/* default 1 */</span>
<span class="token punctuation">}</span>
</code></pre><p>如果所有项目的flex-shrink属性都为 1，当空间不足时，都将等比例缩小。 <img src="`+D+'" alt="flex-shrink" title="flex-shrink"></p><p>如果一个项目的flex-shrink属性为 0，其他项目都为 1，则空间不足时，前者不缩小。 <img src="'+N+`" alt="flex-shrink" title="flex-shrink"> 负值对该属性无效</p><h3 id="flex-basis" tabindex="-1"><a class="header-anchor" href="#flex-basis"><span>flex-basis</span></a></h3><p>flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。</p><pre><code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex-basis</span><span class="token punctuation">:</span> &lt;length&gt; | auto<span class="token punctuation">;</span> <span class="token comment">/* default auto */</span>
<span class="token punctuation">}</span>
</code></pre><p>它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。 当主轴设置为水平时，当设置了flex-basis，设置的项目宽度值会失效，flex-basis需要跟flex-grow和flex-shrink配合使用才能生效。有两种特殊的值:</p><ul><li>当flex-basis 值为 0 % 时，项目尺寸会被认为是0，因此无论项目尺寸设置多少都用；</li><li>当flex-basis 值为 auto 时，则跟根据尺寸的设定值来设置大小。</li></ul><h3 id="flex" tabindex="-1"><a class="header-anchor" href="#flex"><span>flex</span></a></h3><p>flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。</p><pre><code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex</span><span class="token punctuation">:</span> none | [ &lt;<span class="token string">&#39;flex-grow&#39;</span>&gt; &lt;<span class="token string">&#39;flex-shrink&#39;</span>&gt;? || &lt;<span class="token string">&#39;flex-basis&#39;</span>&gt; ]
<span class="token punctuation">}</span>
</code></pre><p>该属性有两个快捷值auto (1 1 auto) 和 none (0 0 auto)。 建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</p><p>(1) 默认值：flex:0 1 auto，即在有剩余空间时，只放大不缩小</p><pre><code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex</span><span class="token punctuation">:</span>0 1 auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex-grow</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  <span class="token property">flex-basis</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><p>(2)flex: none，即有剩余空间时，不放大也不缩小，最终尺寸通常表现为最大内容宽度。</p><pre><code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex</span><span class="token punctuation">:</span>0 0 auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex-grow</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">flex-basis</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><p>(3)flex: 0，即当有剩余空间时，项目宽度为其内容的宽度，最终尺寸表现为最小内容宽度。</p><pre><code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex</span><span class="token punctuation">:</span>0 1 0%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex-grow</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  <span class="token property">flex-basis</span><span class="token punctuation">:</span> 0%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><p>(4)flex: auto，即元素尺寸可以弹性增大，也可以弹性变小，具有十足的弹性，但在尺寸不足时会优先最大化内容尺寸。</p><pre><code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex</span><span class="token punctuation">:</span>1 1 auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex-grow</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  <span class="token property">flex-basis</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><p>(5)flex: 1，即元素尺寸可以弹性增大，也可以弹性变小，具有十足的弹性，但是在尺寸不足时会优先最小化内容尺寸。</p><pre><code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex</span><span class="token punctuation">:</span>1 1 0%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex-grow</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
  <span class="token property">flex-basis</span><span class="token punctuation">:</span> 0%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><h3 id="align-self" tabindex="-1"><a class="header-anchor" href="#align-self"><span>align-self</span></a></h3><p>align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。</p><pre><code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">align-self</span><span class="token punctuation">:</span> auto | flex-start | flex-end | center | baseline | stretch<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
// <span class="token property">flex-start</span><span class="token punctuation">:</span> 元素与容器顶部对齐
</code></pre><p><img src="`+z+'" alt="align-self" title="align-self"></p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2>',73),E={href:"https://juejin.cn/post/7245898637779157052?searchId=202403081601259A21A8CDA58336174953#heading-9%E2%80%8B%E2%80%8B",target:"_blank",rel:"noopener noreferrer"};function A(U,W){const t=a("ExternalLinkIcon");return e(),p("div",null,[V,n("p",null,[n("a",E,[l("flex布局"),o(t)])])])}const H=s(F,[["render",A],["__file","flex.html.vue"]]),I=JSON.parse('{"path":"/blogs/technology/CSS/flex.html","title":"Flex布局","lang":"en-US","frontmatter":{"title":"Flex布局","date":"2024/07/01","tags":["CSS"],"categories":["CSS"]},"headers":[{"level":2,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":2,"title":"容器属性","slug":"容器属性","link":"#容器属性","children":[{"level":3,"title":"flex-direction","slug":"flex-direction","link":"#flex-direction","children":[]},{"level":3,"title":"flex-wrap","slug":"flex-wrap","link":"#flex-wrap","children":[]},{"level":3,"title":"flex-flow","slug":"flex-flow","link":"#flex-flow","children":[]},{"level":3,"title":"justify-content","slug":"justify-content","link":"#justify-content","children":[]},{"level":3,"title":"align-items","slug":"align-items","link":"#align-items","children":[]},{"level":3,"title":"align-content","slug":"align-content","link":"#align-content","children":[]}]},{"level":2,"title":"项目属性","slug":"项目属性","link":"#项目属性","children":[{"level":3,"title":"order","slug":"order","link":"#order","children":[]},{"level":3,"title":"flex-grow","slug":"flex-grow","link":"#flex-grow","children":[]},{"level":3,"title":"flex-shrink","slug":"flex-shrink","link":"#flex-shrink","children":[]},{"level":3,"title":"flex-basis","slug":"flex-basis","link":"#flex-basis","children":[]},{"level":3,"title":"flex","slug":"flex","link":"#flex","children":[]},{"level":3,"title":"align-self","slug":"align-self","link":"#align-self","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1719811114000,"updatedTime":1722397137000,"contributors":[{"name":"zhuxiaoying","email":"zhuxiaoying@meituan.com","commits":2}]},"filePathRelative":"blogs/technology/CSS/flex.md"}');export{H as comp,I as data};
